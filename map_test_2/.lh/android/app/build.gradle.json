{
    "sourceFile": "android/app/build.gradle",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1725180670177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725180682044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         }\r\n     }\r\n }\r\n \r\n-dep\r\n+dependencies\r\n \r\n flutter {\r\n     source = \"../..\"\r\n }\r\n"
                },
                {
                    "date": 1725180695688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,11 @@\n         }\r\n     }\r\n }\r\n \r\n-dependencies\r\n+dependencies{\r\n+    \r\n+}\r\n \r\n flutter {\r\n     source = \"../..\"\r\n }\r\n"
                },
                {
                    "date": 1725180706193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,15 @@\n     }\r\n }\r\n \r\n dependencies{\r\n-    \r\n+     compile fileTree(dir: 'libs', include: ['*.jar'])\r\n+    //3D地图so及jar\r\n+    compile 'com.amap.api:3dmap:latest.integration'\r\n+    //定位功能\r\n+    compile 'com.amap.api:location:latest.integration'\r\n+    //搜索功能\r\n+    compile 'com.amap.api:search:latest.integration'\r\n }\r\n \r\n flutter {\r\n     source = \"../..\"\r\n"
                },
                {
                    "date": 1725180726430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,11 +53,12 @@\n     }\r\n }\r\n \r\n dependencies{\r\n-     compile fileTree(dir: 'libs', include: ['*.jar'])\r\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n     //3D地图so及jar\r\n     compile 'com.amap.api:3dmap:latest.integration'\r\n+    compile 'com.amap.api:map2d:latest.integration'\r\n     //定位功能\r\n     compile 'com.amap.api:location:latest.integration'\r\n     //搜索功能\r\n     compile 'com.amap.api:search:latest.integration'\r\n"
                },
                {
                    "date": 1725180735992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,10 @@\n \r\n dependencies{\r\n     compile fileTree(dir: 'libs', include: ['*.jar'])\r\n     //3D地图so及jar\r\n-    compile 'com.amap.api:3dmap:latest.integration'\r\n+    // compile 'com.amap.api:3dmap:latest.integration'\r\n+    // 2D地图so及jar\r\n     compile 'com.amap.api:map2d:latest.integration'\r\n     //定位功能\r\n     compile 'com.amap.api:location:latest.integration'\r\n     //搜索功能\r\n"
                },
                {
                    "date": 1725180764669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+plugins {\r\n+    id \"com.android.application\"\r\n+    id \"kotlin-android\"\r\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\r\n+    id \"dev.flutter.flutter-gradle-plugin\"\r\n+}\r\n+\r\n+def localProperties = new Properties()\r\n+def localPropertiesFile = rootProject.file(\"local.properties\")\r\n+if (localPropertiesFile.exists()) {\r\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\r\n+        localProperties.load(reader)\r\n+    }\r\n+}\r\n+\r\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\r\n+if (flutterVersionCode == null) {\r\n+    flutterVersionCode = \"1\"\r\n+}\r\n+\r\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\r\n+if (flutterVersionName == null) {\r\n+    flutterVersionName = \"1.0\"\r\n+}\r\n+\r\n+android {\r\n+    namespace = \"com.example.map_test_2\"\r\n+    compileSdk = flutter.compileSdkVersion\r\n+    ndkVersion = flutter.ndkVersion\r\n+\r\n+    compileOptions {\r\n+        sourceCompatibility = JavaVersion.VERSION_1_8\r\n+        targetCompatibility = JavaVersion.VERSION_1_8\r\n+    }\r\n+\r\n+    defaultConfig {\r\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\r\n+        applicationId = \"com.example.map_test_2\"\r\n+        // You can update the following values to match your application needs.\r\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\r\n+        minSdk = flutter.minSdkVersion\r\n+        targetSdk = flutter.targetSdkVersion\r\n+        versionCode = flutterVersionCode.toInteger()\r\n+        versionName = flutterVersionName\r\n+        \r\n+    }\r\n+\r\n+    buildTypes {\r\n+        release {\r\n+            // TODO: Add your own signing config for the release build.\r\n+            // Signing with the debug keys for now, so `flutter run --release` works.\r\n+            signingConfig = signingConfigs.debug\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+dependencies{\r\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n+    //3D地图so及jar\r\n+    // compile 'com.amap.api:3dmap:latest.integration'\r\n+    // 2D地图so及jar\r\n+    compile 'com.amap.api:map2d:latest.integration'\r\n+    //定位功能\r\n+    compile 'com.amap.api:location:latest.integration'\r\n+    //搜索功能\r\n+    compile 'com.amap.api:search:latest.integration'\r\n+}\r\n+\r\n+flutter {\r\n+    source = \"../..\"\r\n+}\r\n"
                },
                {
                    "date": 1725180782170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+plugins {\r\n+    id \"com.android.application\"\r\n+    id \"kotlin-android\"\r\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\r\n+    id \"dev.flutter.flutter-gradle-plugin\"\r\n+}\r\n+\r\n+def localProperties = new Properties()\r\n+def localPropertiesFile = rootProject.file(\"local.properties\")\r\n+if (localPropertiesFile.exists()) {\r\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\r\n+        localProperties.load(reader)\r\n+    }\r\n+}\r\n+\r\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\r\n+if (flutterVersionCode == null) {\r\n+    flutterVersionCode = \"1\"\r\n+}\r\n+\r\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\r\n+if (flutterVersionName == null) {\r\n+    flutterVersionName = \"1.0\"\r\n+}\r\n+\r\n+android {\r\n+    namespace = \"com.example.map_test_2\"\r\n+    compileSdk = flutter.compileSdkVersion\r\n+    ndkVersion = flutter.ndkVersion\r\n+\r\n+    compileOptions {\r\n+        sourceCompatibility = JavaVersion.VERSION_1_8\r\n+        targetCompatibility = JavaVersion.VERSION_1_8\r\n+    }\r\n+\r\n+    defaultConfig {\r\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\r\n+        applicationId = \"com.example.map_test_2\"\r\n+        // You can update the following values to match your application needs.\r\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\r\n+        minSdk = flutter.minSdkVersion\r\n+        targetSdk = flutter.targetSdkVersion\r\n+        versionCode = flutterVersionCode.toInteger()\r\n+        versionName = flutterVersionName\r\n+\r\n+        ndk {\r\n+            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）\r\n+            abiFilters \"armeabi\", \"armeabi-v7a\", \"arm64-v8a\", \"x86\",\"x86_64\"\r\n+        }\r\n+        \r\n+    }\r\n+\r\n+    buildTypes {\r\n+        release {\r\n+            // TODO: Add your own signing config for the release build.\r\n+            // Signing with the debug keys for now, so `flutter run --release` works.\r\n+            signingConfig = signingConfigs.debug\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+dependencies{\r\n+    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n+    //3D地图so及jar\r\n+    // compile 'com.amap.api:3dmap:latest.integration'\r\n+    // 2D地图so及jar\r\n+    compile 'com.amap.api:map2d:latest.integration'\r\n+    //定位功能\r\n+    compile 'com.amap.api:location:latest.integration'\r\n+    //搜索功能\r\n+    compile 'com.amap.api:search:latest.integration'\r\n+}\r\n+\r\n+flutter {\r\n+    source = \"../..\"\r\n+}\r\n"
                }
            ],
            "date": 1725180670177,
            "name": "Commit-0",
            "content": "plugins {\r\n    id \"com.android.application\"\r\n    id \"kotlin-android\"\r\n    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\r\n    id \"dev.flutter.flutter-gradle-plugin\"\r\n}\r\n\r\ndef localProperties = new Properties()\r\ndef localPropertiesFile = rootProject.file(\"local.properties\")\r\nif (localPropertiesFile.exists()) {\r\n    localPropertiesFile.withReader(\"UTF-8\") { reader ->\r\n        localProperties.load(reader)\r\n    }\r\n}\r\n\r\ndef flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\r\nif (flutterVersionCode == null) {\r\n    flutterVersionCode = \"1\"\r\n}\r\n\r\ndef flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\r\nif (flutterVersionName == null) {\r\n    flutterVersionName = \"1.0\"\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.map_test_2\"\r\n    compileSdk = flutter.compileSdkVersion\r\n    ndkVersion = flutter.ndkVersion\r\n\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    defaultConfig {\r\n        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\r\n        applicationId = \"com.example.map_test_2\"\r\n        // You can update the following values to match your application needs.\r\n        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\r\n        minSdk = flutter.minSdkVersion\r\n        targetSdk = flutter.targetSdkVersion\r\n        versionCode = flutterVersionCode.toInteger()\r\n        versionName = flutterVersionName\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            // TODO: Add your own signing config for the release build.\r\n            // Signing with the debug keys for now, so `flutter run --release` works.\r\n            signingConfig = signingConfigs.debug\r\n        }\r\n    }\r\n}\r\n\r\ndep\r\n\r\nflutter {\r\n    source = \"../..\"\r\n}\r\n"
        }
    ]
}