{
    "sourceFile": "lib/components/TopSnackbar.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1720094446318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720094452862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +0,0 @@\n-im\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094458931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+import 'package:flutter/material.dart';\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094472284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n-import 'package:flutter/material.dart';\n\\ No newline at end of file\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget build\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094479499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget buildTopSnackbar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094485160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget buildTopSnackbarPage(){\r\n+  \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094518259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget buildTopSnackbarPage(){\r\n+  re\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094523566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget buildTopSnackbarPage() {\r\n+  return Builder(\r\n+    builder: (BuildContext context) {\r\n+      return Scaffold(\r\n+        body: Padding(\r\n+          padding: const EdgeInsets.symmetric(horizontal: 16),\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            children: [\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message:\r\n+                          'There is some information. You need to do something with that',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show info'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.success(\r\n+                      message:\r\n+                          'Good job, your release is successful. Have a nice day',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show success'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.error(\r\n+                      message:\r\n+                          'Something went wrong. Please check your credentials and try again',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show error'),\r\n+              ),\r\n+              const SizedBox(height: 48),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Persistent SnackBar',\r\n+                    ),\r\n+                    persistent: true,\r\n+                    onAnimationControllerInit: (controller) {\r\n+                      localAnimationController = controller;\r\n+                    },\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () => localAnimationController.reverse(),\r\n+                child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Try to swipe me left',\r\n+                    ),\r\n+                    dismissType: DismissType.onSwipe,\r\n+                    dismissDirection: [DismissDirection.endToStart],\r\n+                  );\r\n+                },\r\n+                child: buildButton(\r\n+                  context,\r\n+                  'Show swiped dismissible SnackBar',\r\n+                ),\r\n+              ),\r\n+            ],\r\n+          ),\r\n+        ),\r\n+      );\r\n+    },\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1720094563904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+Widget buildTopSnackbarPage() {\r\n+  return Builder(\r\n+    builder: (BuildContext context) {\r\n+      return Scaffold(\r\n+        body: Padding(\r\n+          padding: const EdgeInsets.symmetric(horizontal: 16),\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            children: [\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message:\r\n+                          'There is some information. You need to do something with that',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show info'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.success(\r\n+                      message:\r\n+                          'Good job, your release is successful. Have a nice day',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show success'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.error(\r\n+                      message:\r\n+                          'Something went wrong. Please check your credentials and try again',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show error'),\r\n+              ),\r\n+              const SizedBox(height: 48),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Persistent SnackBar',\r\n+                    ),\r\n+                    persistent: true,\r\n+                    onAnimationControllerInit: (controller) {\r\n+                      localAnimationController = controller;\r\n+                    },\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () => localAnimationController.reverse(),\r\n+                child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Try to swipe me left',\r\n+                    ),\r\n+                    dismissType: DismissType.onSwipe,\r\n+                    dismissDirection: [DismissDirection.endToStart],\r\n+                  );\r\n+                },\r\n+                child: buildButton(\r\n+                  context,\r\n+                  'Show swiped dismissible SnackBar',\r\n+                ),\r\n+              ),\r\n+            ],\r\n+          ),\r\n+        ),\r\n+      );\r\n+    },\r\n+  );\r\n+}\r\n+\r\n+\r\n"
                },
                {
                    "date": 1720094578937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,10 @@\n import 'package:flutter/material.dart';\r\n+import 'package:top_snackbar_flutter/custom_snack_bar.dart';\r\n+import 'package:top_snackbar_flutter/tap_bounce_container.dart';\r\n+import 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n \r\n+\r\n Widget buildTopSnackbarPage() {\r\n   return Builder(\r\n     builder: (BuildContext context) {\r\n       return Scaffold(\r\n@@ -92,115 +96,33 @@\n     },\r\n   );\r\n }\r\n \r\n-\r\n-import 'package:flutter/material.dart';\r\n-\r\n-Widget buildTopSnackbarPage() {\r\n-  return Builder(\r\n-    builder: (BuildContext context) {\r\n-      return Scaffold(\r\n-        body: Padding(\r\n-          padding: const EdgeInsets.symmetric(horizontal: 16),\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            children: [\r\n-              TapBounceContainer(\r\n-                onTap: () {\r\n-                  showTopSnackBar(\r\n-                    Overlay.of(context),\r\n-                    const CustomSnackBar.info(\r\n-                      message:\r\n-                          'There is some information. You need to do something with that',\r\n-                    ),\r\n-                  );\r\n-                },\r\n-                child: buildButton(context, 'Show info'),\r\n-              ),\r\n-              const SizedBox(height: 24),\r\n-              TapBounceContainer(\r\n-                onTap: () {\r\n-                  showTopSnackBar(\r\n-                    Overlay.of(context),\r\n-                    const CustomSnackBar.success(\r\n-                      message:\r\n-                          'Good job, your release is successful. Have a nice day',\r\n-                    ),\r\n-                  );\r\n-                },\r\n-                child: buildButton(context, 'Show success'),\r\n-              ),\r\n-              const SizedBox(height: 24),\r\n-              TapBounceContainer(\r\n-                onTap: () {\r\n-                  showTopSnackBar(\r\n-                    Overlay.of(context),\r\n-                    const CustomSnackBar.error(\r\n-                      message:\r\n-                          'Something went wrong. Please check your credentials and try again',\r\n-                    ),\r\n-                  );\r\n-                },\r\n-                child: buildButton(context, 'Show error'),\r\n-              ),\r\n-              const SizedBox(height: 48),\r\n-              TapBounceContainer(\r\n-                onTap: () {\r\n-                  showTopSnackBar(\r\n-                    Overlay.of(context),\r\n-                    const CustomSnackBar.info(\r\n-                      message: 'Persistent SnackBar',\r\n-                    ),\r\n-                    persistent: true,\r\n-                    onAnimationControllerInit: (controller) {\r\n-                      localAnimationController = controller;\r\n-                    },\r\n-                  );\r\n-                },\r\n-                child: buildButton(context, 'Show persistent SnackBar'),\r\n-              ),\r\n-              const SizedBox(height: 24),\r\n-              TapBounceContainer(\r\n-                onTap: () => localAnimationController.reverse(),\r\n-                child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n-              ),\r\n-              const SizedBox(height: 24),\r\n-              TapBounceContainer(\r\n-                onTap: () {\r\n-                  showTopSnackBar(\r\n-                    Overlay.of(context),\r\n-                    const CustomSnackBar.info(\r\n-                      message: 'Try to swipe me left',\r\n-                    ),\r\n-                    dismissType: DismissType.onSwipe,\r\n-                    dismissDirection: [DismissDirection.endToStart],\r\n-                  );\r\n-                },\r\n-                child: buildButton(\r\n-                  context,\r\n-                  'Show swiped dismissible SnackBar',\r\n-                ),\r\n-              ),\r\n-            ],\r\n+Container buildButton(BuildContext context, String text) {\r\n+    return Container(\r\n+      decoration: BoxDecoration(\r\n+        color: Theme.of(context).primaryColor,\r\n+        borderRadius: BorderRadius.circular(12),\r\n+        boxShadow: [\r\n+          BoxShadow(\r\n+            color: Colors.grey.withOpacity(0.4),\r\n+            spreadRadius: 6,\r\n+            blurRadius: 10,\r\n+            offset: const Offset(0, 3),\r\n           ),\r\n+        ],\r\n+      ),\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24),\r\n+        child: Center(\r\n+          child: Text(\r\n+            text,\r\n+            style: const TextStyle(\r\n+              color: Colors.white,\r\n+              fontSize: 16,\r\n\\ No newline at end of file\n+              fontWeight: FontWeight.w600,\r\n+            ),\r\n+          ),\r\n         ),\r\n-      );\r\n-    },\r\n-  );\r\n-}\r\n-import 'package:flutter/material.dart';\r\n-\r\n-Widget buildTopSnackbarPage(){\r\n-  re\r\n-}\n-import 'package:flutter/material.dart';\r\n-\r\n-Widget buildTopSnackbarPage(){\r\n-  \r\n-}\n-import 'package:flutter/material.dart';\r\n-\r\n-Widget buildTopSnackbar\n-import 'package:flutter/material.dart';\r\n-\r\n-Widget build\n+      ),\r\n+    );\r\n+  }\r\n"
                },
                {
                    "date": 1720094599458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:top_snackbar_flutter/tap_bounce_container.dart';\r\n import 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n \r\n \r\n+\r\n Widget buildTopSnackbarPage() {\r\n   return Builder(\r\n     builder: (BuildContext context) {\r\n       return Scaffold(\r\n@@ -124,5 +125,5 @@\n           ),\r\n         ),\r\n       ),\r\n     );\r\n-  }\n\\ No newline at end of file\n+  }\r\n"
                },
                {
                    "date": 1720094609938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n \r\n late AnimationController localAnimationController;\r\n \r\n-Widget buildTopSnackbarPage() {\r\n+Widget buildTopSnackbarPage(Anim) {\r\n   return Builder(\r\n     builder: (BuildContext context) {\r\n       return Scaffold(\r\n         body: Padding(\r\n"
                },
                {
                    "date": 1720094617394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,129 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:top_snackbar_flutter/custom_snack_bar.dart';\r\n+import 'package:top_snackbar_flutter/tap_bounce_container.dart';\r\n+import 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n+\r\n+late AnimationController localAnimationController;\r\n+\r\n+Widget buildTopSnackbarPage(AnimationController local) {\r\n+  return Builder(\r\n+    builder: (BuildContext context) {\r\n+      return Scaffold(\r\n+        body: Padding(\r\n+          padding: const EdgeInsets.symmetric(horizontal: 16),\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            children: [\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message:\r\n+                          'There is some information. You need to do something with that',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show info'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.success(\r\n+                      message:\r\n+                          'Good job, your release is successful. Have a nice day',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show success'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.error(\r\n+                      message:\r\n+                          'Something went wrong. Please check your credentials and try again',\r\n+                    ),\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show error'),\r\n+              ),\r\n+              const SizedBox(height: 48),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Persistent SnackBar',\r\n+                    ),\r\n+                    persistent: true,\r\n+                    onAnimationControllerInit: (controller) {\r\n+                      localAnimationController = controller;\r\n+                    },\r\n+                  );\r\n+                },\r\n+                child: buildButton(context, 'Show persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () => localAnimationController.reverse(),\r\n+                child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n+              ),\r\n+              const SizedBox(height: 24),\r\n+              TapBounceContainer(\r\n+                onTap: () {\r\n+                  showTopSnackBar(\r\n+                    Overlay.of(context),\r\n+                    const CustomSnackBar.info(\r\n+                      message: 'Try to swipe me left',\r\n+                    ),\r\n+                    dismissType: DismissType.onSwipe,\r\n+                    dismissDirection: [DismissDirection.endToStart],\r\n+                  );\r\n+                },\r\n+                child: buildButton(\r\n+                  context,\r\n+                  'Show swiped dismissible SnackBar',\r\n+                ),\r\n+              ),\r\n+            ],\r\n+          ),\r\n+        ),\r\n+      );\r\n+    },\r\n+  );\r\n+}\r\n+\r\n+Container buildButton(BuildContext context, String text) {\r\n+    return Container(\r\n+      decoration: BoxDecoration(\r\n+        color: Theme.of(context).primaryColor,\r\n+        borderRadius: BorderRadius.circular(12),\r\n+        boxShadow: [\r\n+          BoxShadow(\r\n+            color: Colors.grey.withOpacity(0.4),\r\n+            spreadRadius: 6,\r\n+            blurRadius: 10,\r\n+            offset: const Offset(0, 3),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24),\r\n+        child: Center(\r\n+          child: Text(\r\n+            text,\r\n+            style: const TextStyle(\r\n+              color: Colors.white,\r\n+              fontSize: 16,\r\n+              fontWeight: FontWeight.w600,\r\n+            ),\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n"
                }
            ],
            "date": 1720094446318,
            "name": "Commit-0",
            "content": "im"
        }
    ]
}