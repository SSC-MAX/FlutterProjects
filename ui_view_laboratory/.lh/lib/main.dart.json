{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1720076332840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720094043509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   runApp(const MyApp());\r\n }\r\n \r\n class MyApp extends StatefulWidget {\r\n-  const MyApp({Key? key}) : super(key: key);\r\n+  const MyApp({super.key});\r\n \r\n   @override\r\n   MyAppState createState() => MyAppState();\r\n }\r\n"
                },
                {
                    "date": 1720094514148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,98 +20,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n-      home: Builder(\r\n-        builder: (BuildContext context) {\r\n-          return Scaffold(\r\n-            body: Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16),\r\n-              child: Column(\r\n-                mainAxisAlignment: MainAxisAlignment.center,\r\n-                children: [\r\n-                  TapBounceContainer(\r\n-                    onTap: () {\r\n-                      showTopSnackBar(\r\n-                        Overlay.of(context),\r\n-                        const CustomSnackBar.info(\r\n-                          message:\r\n-                              'There is some information. You need to do something with that',\r\n-                        ),\r\n-                      );\r\n-                    },\r\n-                    child: buildButton(context, 'Show info'),\r\n-                  ),\r\n-                  const SizedBox(height: 24),\r\n-                  TapBounceContainer(\r\n-                    onTap: () {\r\n-                      showTopSnackBar(\r\n-                        Overlay.of(context),\r\n-                        const CustomSnackBar.success(\r\n-                          message:\r\n-                              'Good job, your release is successful. Have a nice day',\r\n-                        ),\r\n-                      );\r\n-                    },\r\n-                    child: buildButton(context, 'Show success'),\r\n-                  ),\r\n-                  const SizedBox(height: 24),\r\n-                  TapBounceContainer(\r\n-                    onTap: () {\r\n-                      showTopSnackBar(\r\n-                        Overlay.of(context),\r\n-                        const CustomSnackBar.error(\r\n-                          message:\r\n-                              'Something went wrong. Please check your credentials and try again',\r\n-                        ),\r\n-                      );\r\n-                    },\r\n-                    child: buildButton(context, 'Show error'),\r\n-                  ),\r\n-                  const SizedBox(height: 48),\r\n-                  TapBounceContainer(\r\n-                    onTap: () {\r\n-                      showTopSnackBar(\r\n-                        Overlay.of(context),\r\n-                        const CustomSnackBar.info(\r\n-                          message: 'Persistent SnackBar',\r\n-                        ),\r\n-                        persistent: true,\r\n-                        onAnimationControllerInit: (controller) {\r\n-                          localAnimationController = controller;\r\n-                        },\r\n-                      );\r\n-                    },\r\n-                    child: buildButton(context, 'Show persistent SnackBar'),\r\n-                  ),\r\n-                  const SizedBox(height: 24),\r\n-                  TapBounceContainer(\r\n-                    onTap: () => localAnimationController.reverse(),\r\n-                    child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n-                  ),\r\n-                  const SizedBox(height: 24),\r\n-                  TapBounceContainer(\r\n-                    onTap: () {\r\n-                      showTopSnackBar(\r\n-                        Overlay.of(context),\r\n-                        const CustomSnackBar.info(\r\n-                          message: 'Try to swipe me left',\r\n-                        ),\r\n-                        dismissType: DismissType.onSwipe,\r\n-                        dismissDirection: [DismissDirection.endToStart],\r\n-                      );\r\n-                    },\r\n-                    child: buildButton(\r\n-                      context,\r\n-                      'Show swiped dismissible SnackBar',\r\n-                    ),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-          );\r\n-        },\r\n-      ),\r\n+      home:,\r\n     );\r\n   }\r\n \r\n   Container buildButton(BuildContext context, String text) {\r\n"
                },
                {
                    "date": 1720094556948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,34 +24,6 @@\n       home:,\r\n     );\r\n   }\r\n \r\n-  Container buildButton(BuildContext context, String text) {\r\n-    return Container(\r\n-      decoration: BoxDecoration(\r\n-        color: Theme.of(context).primaryColor,\r\n-        borderRadius: BorderRadius.circular(12),\r\n-        boxShadow: [\r\n-          BoxShadow(\r\n-            color: Colors.grey.withOpacity(0.4),\r\n-            spreadRadius: 6,\r\n-            blurRadius: 10,\r\n-            offset: const Offset(0, 3),\r\n-          ),\r\n-        ],\r\n-      ),\r\n-      child: Padding(\r\n-        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24),\r\n-        child: Center(\r\n-          child: Text(\r\n-            text,\r\n-            style: const TextStyle(\r\n-              color: Colors.white,\r\n-              fontSize: 16,\r\n-              fontWeight: FontWeight.w600,\r\n-            ),\r\n-          ),\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n+  \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720094572230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,5 @@\n import 'package:flutter/material.dart';\r\n-import 'package:top_snackbar_flutter/custom_snack_bar.dart';\r\n-import 'package:top_snackbar_flutter/tap_bounce_container.dart';\r\n-import 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n \r\n void main() {\r\n   runApp(const MyApp());\r\n }\r\n"
                },
                {
                    "date": 1720094597876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   MyAppState createState() => MyAppState();\r\n }\r\n \r\n class MyAppState extends State<MyApp> {\r\n-  late AnimationController localAnimationController;\r\n+  \r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n"
                },
                {
                    "date": 1720094875078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n-      home:,\r\n+      home:buildSli,\r\n     );\r\n   }\r\n \r\n   \r\n"
                },
                {
                    "date": 1720097645202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,63 @@\n import 'package:flutter/material.dart';\r\n-\r\n-void main() {\r\n-  runApp(const MyApp());\r\n-}\r\n-\r\n-class MyApp extends StatefulWidget {\r\n-  const MyApp({super.key});\r\n-\r\n+ \r\n+void main() => runApp(MyApp());\r\n+ \r\n+class MyApp extends StatelessWidget {\r\n   @override\r\n-  MyAppState createState() => MyAppState();\r\n-}\r\n-\r\n-class MyAppState extends State<MyApp> {\r\n-  \r\n-\r\n-  @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n-      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n-      home:buildSli,\r\n+      home: Scaffold(\r\n\\ No newline at end of file\n+        body: Center(\r\n+          child: ExpansionPanelList(\r\n+            expansionCallback: (int index, bool isExpanded) {\r\n+              setState(() {\r\n+                _panelList[index].isExpanded = !isExpanded;\r\n+              });\r\n+            },\r\n+            children: _panelList.map((ExpansionPanelItem item) {\r\n+              return ExpansionPanel(\r\n+                headerBuilder: (BuildContext context, bool isExpanded) {\r\n+                  return ListTile(\r\n+                    title: Text(item.header),\r\n+                  );\r\n+                },\r\n+                body: ListTileTheme(\r\n+                  child: Column(\r\n+                    children: item.children.map((String child) {\r\n+                      return ListTile(\r\n+                        title: Text(child),\r\n+                      );\r\n+                    }).toList(),\r\n+                  ),\r\n+                ),\r\n+                isExpanded: item.isExpanded,\r\n+              );\r\n+            }).toList(),\r\n+          ),\r\n+        ),\r\n+      ),\r\n     );\r\n   }\r\n-\r\n-  \r\n-}\n+}\r\n+ \r\n+class ExpansionPanelItem {\r\n+  ExpansionPanelItem({this.header, this.children, this.isExpanded = false});\r\n+ \r\n+  final String header;\r\n+  final List<String> children;\r\n+  bool isExpanded;\r\n+}\r\n+ \r\n+final List<ExpansionPanelItem> _panelList = <ExpansionPanelItem>[\r\n+  ExpansionPanelItem(\r\n+    header: 'Panel 1',\r\n+    children: ['Item 1', 'Item 2', 'Item 3'],\r\n+    isExpanded: false,\r\n+  ),\r\n+  ExpansionPanelItem(\r\n+    header: 'Panel 2',\r\n+    children: ['Item 4', 'Item 5', 'Item 6'],\r\n+    isExpanded: false,\r\n+  ),\r\n+  // You can add more items here if needed\r\n+];\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720097760152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,27 @@\n import 'package:flutter/material.dart';\r\n- \r\n-void main() => runApp(MyApp());\r\n- \r\n-class MyApp extends StatelessWidget {\r\n+import 'package:ui_view_laboratory/components/SlideUpPanel.dart';\r\n+\r\n+void main() {\r\n+  runApp(const MyApp());\r\n+}\r\n+\r\n+class MyApp extends StatefulWidget {\r\n+  const MyApp({super.key});\r\n+\r\n   @override\r\n+  MyAppState createState() => MyAppState();\r\n+}\r\n+\r\n+class MyAppState extends State<MyApp> {\r\n+  \r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n-      home: Scaffold(\r\n-        body: Center(\r\n-          child: ExpansionPanelList(\r\n-            expansionCallback: (int index, bool isExpanded) {\r\n-              setState(() {\r\n-                _panelList[index].isExpanded = !isExpanded;\r\n-              });\r\n-            },\r\n-            children: _panelList.map((ExpansionPanelItem item) {\r\n-              return ExpansionPanel(\r\n-                headerBuilder: (BuildContext context, bool isExpanded) {\r\n-                  return ListTile(\r\n-                    title: Text(item.header),\r\n-                  );\r\n-                },\r\n-                body: ListTileTheme(\r\n-                  child: Column(\r\n-                    children: item.children.map((String child) {\r\n-                      return ListTile(\r\n-                        title: Text(child),\r\n-                      );\r\n-                    }).toList(),\r\n-                  ),\r\n-                ),\r\n-                isExpanded: item.isExpanded,\r\n-              );\r\n-            }).toList(),\r\n-          ),\r\n-        ),\r\n-      ),\r\n+      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n+      home:buildSlideUpPanel(context),\r\n     );\r\n   }\r\n-}\r\n- \r\n-class ExpansionPanelItem {\r\n-  ExpansionPanelItem({this.header, this.children, this.isExpanded = false});\r\n- \r\n\\ No newline at end of file\n-  final String header;\r\n-  final List<String> children;\r\n-  bool isExpanded;\r\n-}\r\n- \r\n-final List<ExpansionPanelItem> _panelList = <ExpansionPanelItem>[\r\n-  ExpansionPanelItem(\r\n-    header: 'Panel 1',\r\n-    children: ['Item 1', 'Item 2', 'Item 3'],\r\n-    isExpanded: false,\r\n-  ),\r\n-  ExpansionPanelItem(\r\n-    header: 'Panel 2',\r\n-    children: ['Item 4', 'Item 5', 'Item 6'],\r\n-    isExpanded: false,\r\n-  ),\r\n-  // You can add more items here if needed\r\n-];\n+\r\n+  \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720097872040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,59 @@\n import 'package:flutter/material.dart';\r\n-import 'package:ui_view_laboratory/components/SlideUpPanel.dart';\r\n-\r\n-void main() {\r\n-  runApp(const MyApp());\r\n+ \r\n+void main() => runApp(MyApp());\r\n+ \r\n+class MyApp extends StatelessWidget {\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return MaterialApp(\r\n+      home: HomePage(),\r\n+    );\r\n+  }\r\n }\r\n-\r\n-class MyApp extends StatefulWidget {\r\n-  const MyApp({super.key});\r\n-\r\n+ \r\n+class HomePage extends StatefulWidget {\r\n   @override\r\n-  MyAppState createState() => MyAppState();\r\n+  _HomePageState createState() => _HomePageState();\r\n }\r\n-\r\n-class MyAppState extends State<MyApp> {\r\n-  \r\n-\r\n+ \r\n+class _HomePageState extends State<HomePage> {\r\n+  double _sheetHeight = 100; // 初始高度\r\n+ \r\n+  void _handleDragUpdate(DragUpdateDetails details) {\r\n+    setState(() {\r\n+      _sheetHeight += details.primaryDelta; // 更新高度\r\n+    });\r\n+  }\r\n+ \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n-      home:buildSlideUpPanel(context),\r\n+    return Scaffold(\r\n+      body: Stack(\r\n+        children: <Widget>[\r\n+          // 主要内容\r\n+          Center(\r\n+            child: Text('主要内容', style: TextStyle(fontSize: 24)),\r\n+          ),\r\n+          // 滑动下拉面板\r\n+          DraggableScrollableSheet(\r\n+            initialChildSize: _sheetHeight,\r\n+            minChildSize: 0.2, // 最小高度占屏幕高度的比例\r\n+            maxChildSize: 1.0, // 最大高度占屏幕高度的比例\r\n+            builder: (BuildContext context, ScrollController scrollController) {\r\n+              return Container(\r\n+                color: Colors.blue,\r\n+                child: ListView.builder(\r\n+                  controller: scrollController,\r\n+                  itemCount: 100,\r\n+                  itemBuilder: (BuildContext context, int index) {\r\n+                    return ListTile(title: Text('Item $index'));\r\n+                  },\r\n+                ),\r\n+              );\r\n+            },\r\n+          ),\r\n+        ],\r\n+      ),\r\n     );\r\n   }\r\n-\r\n-  \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720097912248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n  \r\n class _HomePageState extends State<HomePage> {\r\n   double _sheetHeight = 100; // 初始高度\r\n  \r\n-  void _handleDragUpdate(DragUpdateDetails details) {\r\n-    setState(() {\r\n-      _sheetHeight += details.primaryDelta; // 更新高度\r\n-    });\r\n-  }\r\n+  // void _handleDragUpdate(DragUpdateDetails details) {\r\n+  //   setState(() {\r\n+  //     _sheetHeight += details.primaryDelta; // 更新高度\r\n+  //   });\r\n+  // }\r\n  \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n"
                },
                {
                    "date": 1720098023402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             child: Text('主要内容', style: TextStyle(fontSize: 24)),\r\n           ),\r\n           // 滑动下拉面板\r\n           DraggableScrollableSheet(\r\n-            initialChildSize: _sheetHeight,\r\n+            // initialChildSize: _sheetHeight,\r\n             minChildSize: 0.2, // 最小高度占屏幕高度的比例\r\n             maxChildSize: 1.0, // 最大高度占屏幕高度的比例\r\n             builder: (BuildContext context, ScrollController scrollController) {\r\n               return Container(\r\n"
                },
                {
                    "date": 1720098412292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,59 +1,27 @@\n import 'package:flutter/material.dart';\r\n- \r\n-void main() => runApp(MyApp());\r\n- \r\n-class MyApp extends StatelessWidget {\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      home: HomePage(),\r\n-    );\r\n-  }\r\n+import 'package:ui_view_laboratory/components/SlideUpPanel.dart';\r\n+\r\n+void main() {\r\n+  runApp(const MyApp());\r\n }\r\n- \r\n-class HomePage extends StatefulWidget {\r\n+\r\n+class MyApp extends StatefulWidget {\r\n+  const MyApp({super.key});\r\n+\r\n   @override\r\n-  _HomePageState createState() => _HomePageState();\r\n+  MyAppState createState() => MyAppState();\r\n }\r\n- \r\n-class _HomePageState extends State<HomePage> {\r\n-  double _sheetHeight = 100; // 初始高度\r\n- \r\n-  // void _handleDragUpdate(DragUpdateDetails details) {\r\n-  //   setState(() {\r\n-  //     _sheetHeight += details.primaryDelta; // 更新高度\r\n-  //   });\r\n-  // }\r\n- \r\n+\r\n+class MyAppState extends State<MyApp> {\r\n+  \r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      body: Stack(\r\n-        children: <Widget>[\r\n-          // 主要内容\r\n-          Center(\r\n-            child: Text('主要内容', style: TextStyle(fontSize: 24)),\r\n-          ),\r\n-          // 滑动下拉面板\r\n-          DraggableScrollableSheet(\r\n-            // initialChildSize: _sheetHeight,\r\n-            minChildSize: 0.2, // 最小高度占屏幕高度的比例\r\n-            maxChildSize: 1.0, // 最大高度占屏幕高度的比例\r\n-            builder: (BuildContext context, ScrollController scrollController) {\r\n-              return Container(\r\n-                color: Colors.blue,\r\n-                child: ListView.builder(\r\n-                  controller: scrollController,\r\n-                  itemCount: 100,\r\n-                  itemBuilder: (BuildContext context, int index) {\r\n-                    return ListTile(title: Text('Item $index'));\r\n-                  },\r\n-                ),\r\n-              );\r\n-            },\r\n-          ),\r\n-        ],\r\n-      ),\r\n+    return MaterialApp(\r\n+      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n+      home:buildSlideUpPanel(context),\r\n     );\r\n   }\r\n+\r\n+  \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720100881820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,198 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:battery_indicator/battery_indicator.dart';\r\n+\r\n+void main() => runApp(const MyApp());\r\n+\r\n+class MyApp extends StatelessWidget {\r\n+  const MyApp({super.key});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return MaterialApp(\r\n+      title: 'Flutter Demo',\r\n+      theme: ThemeData(\r\n+        primarySwatch: Colors.blue,\r\n+      ),\r\n+      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+class MyHomePage extends StatefulWidget {\r\n+  const MyHomePage({Key? key, required this.title}) : super(key: key);\r\n+\r\n+  final String title;\r\n+\r\n+  @override\r\n+  State<MyHomePage> createState() => _MyHomePageState();\r\n+}\r\n+\r\n+class _MyHomePageState extends State<MyHomePage> {\r\n+  final _styleItems = [\r\n+    const DropdownMenuItem(\r\n+      value: 1,\r\n+      child: Text('skeumorphism'),\r\n+    ),\r\n+    const DropdownMenuItem(\r\n+      value: 0,\r\n+      child: Text('flat'),\r\n+    ),\r\n+  ];\r\n+\r\n+  var _styleIndex = 0;\r\n+\r\n+  var _colorful = true;\r\n+\r\n+  var _showPercentSlide = true;\r\n+  var _showPercentNum = false;\r\n+\r\n+  var _size = 18.0;\r\n+\r\n+  var _ratio = 3.0;\r\n+\r\n+  Color _color = Colors.blue;\r\n+\r\n+  Widget getColorSelector(Color color) {\r\n+    return GestureDetector(\r\n+      onTap: () {\r\n+        setState(() {\r\n+          _color = color;\r\n+        });\r\n+      },\r\n+      child: CircleAvatar(\r\n+        backgroundColor: color,\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: Text(widget.title),\r\n+      ),\r\n+      body: Center(\r\n+        child: Column(\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: <Widget>[\r\n+            SizedBox(\r\n+              width: 200.0,\r\n+              height: 100.0,\r\n+              child: Center(\r\n+                child: BatteryIndicator(\r\n+                  style: BatteryIndicatorStyle.values[_styleIndex],\r\n+                  colorful: _colorful,\r\n+                  showPercentNum: _showPercentNum,\r\n+                  mainColor: _color,\r\n+                  size: _size,\r\n+                  ratio: _ratio,\r\n+                  showPercentSlide: _showPercentSlide,\r\n+                ),\r\n+              ),\r\n+            ),\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(8.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: <Widget>[\r\n+                  const Text('color:'),\r\n+                  getColorSelector(Colors.blue),\r\n+                  getColorSelector(Colors.red),\r\n+                  getColorSelector(Colors.black),\r\n+                  getColorSelector(Colors.grey),\r\n+                  getColorSelector(Colors.yellow),\r\n+                  getColorSelector(Colors.green),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(8.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: <Widget>[\r\n+                  const Text('size:'),\r\n+                  Expanded(\r\n+                    child: Slider(\r\n+                      min: 8.0,\r\n+                      max: 48.0,\r\n+                      divisions: 300,\r\n+                      label: _size.toStringAsFixed(1),\r\n+                      value: _size,\r\n+                      onChanged: (val) {\r\n+                        setState(() {\r\n+                          _size = val;\r\n+                        });\r\n+                      },\r\n+                    ),\r\n+                  ),\r\n+                  const Text('ratio:'),\r\n+                  Expanded(\r\n+                    child: Slider(\r\n+                      min: 1.0,\r\n+                      max: 4.0,\r\n+                      divisions: 30,\r\n+                      label: _ratio.toStringAsFixed(1),\r\n+                      value: _ratio,\r\n+                      onChanged: (val) {\r\n+                        setState(() {\r\n+                          _ratio = val;\r\n+                        });\r\n+                      },\r\n+                    ),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+              children: <Widget>[\r\n+                const Text('colorful:'),\r\n+                Checkbox(\r\n+                  value: _colorful,\r\n+                  onChanged: (val) {\r\n+                    setState(() {\r\n+                      _colorful = val ?? _colorful;\r\n+                    });\r\n+                  },\r\n+                ),\r\n+                const Text('percentNum:'),\r\n+                Checkbox(\r\n+                  value: _showPercentNum,\r\n+                  onChanged: (val) {\r\n+                    setState(() {\r\n+                      _showPercentNum = val ?? _showPercentNum;\r\n+                    });\r\n+                  },\r\n+                ),\r\n+                const Text('percentSlide:'),\r\n+                Checkbox(\r\n+                  value: _showPercentSlide,\r\n+                  onChanged: (val) {\r\n+                    setState(() {\r\n+                      _showPercentSlide = val ?? _showPercentSlide;\r\n+                    });\r\n+                  },\r\n+                ),\r\n+              ],\r\n+            ),\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+              children: <Widget>[\r\n+                const Text('style:'),\r\n+                DropdownButton(\r\n+                  value: _styleIndex,\r\n+                  items: _styleItems,\r\n+                  onChanged: (val) {\r\n+                    setState(() {\r\n+                      _styleIndex = val as int;\r\n+                    });\r\n+                  },\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720101132277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,225 +1,61 @@\n+import 'package:cupertino_battery_indicator/cupertino_battery_indicator.dart';\r\n+import 'package:flutter/cupertino.dart';\r\n import 'package:flutter/material.dart';\r\n-import 'package:battery_indicator/battery_indicator.dart';\r\n \r\n-void main() => runApp(const MyApp());\r\n-\r\n-class MyApp extends StatelessWidget {\r\n-  const MyApp({super.key});\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      title: 'Flutter Demo',\r\n-      theme: ThemeData(\r\n-        primarySwatch: Colors.blue,\r\n-      ),\r\n-      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n-    );\r\n-  }\r\n+void main() {\r\n+  runApp(ExampleApp());\r\n }\r\n \r\n-class MyHomePage extends StatefulWidget {\r\n-  const MyHomePage({Key? key, required this.title}) : super(key: key);\r\n-\r\n-  final String title;\r\n-\r\n+class ExampleApp extends StatefulWidget {\r\n   @override\r\n-  State<MyHomePage> createState() => _MyHomePageState();\r\n+  State<ExampleApp> createState() => _ExampleAppState();\r\n }\r\n \r\n-class _MyHomePageState extends State<MyHomePage> {\r\n-  final _styleItems = [\r\n-    const DropdownMenuItem(\r\n-      value: 1,\r\n-      child: Text('skeumorphism'),\r\n-    ),\r\n-    const DropdownMenuItem(\r\n-      value: 0,\r\n-      child: Text('flat'),\r\n-    ),\r\n-  ];\r\n+class _ExampleAppState extends State<ExampleApp> {\r\n+  double _value = 0.5;\r\n+  bool _icon = false;\r\n \r\n-  var _styleIndex = 0;\r\n-\r\n-  var _colorful = true;\r\n-\r\n-  var _showPercentSlide = true;\r\n-  var _showPercentNum = false;\r\n-\r\n-  var _size = 18.0;\r\n-\r\n-  var _ratio = 3.0;\r\n-\r\n-  Color _color = Colors.blue;\r\n-\r\n-  Widget getColorSelector(Color color) {\r\n-    return GestureDetector(\r\n-      onTap: () {\r\n-        setState(() {\r\n-          _color = color;\r\n-        });\r\n-      },\r\n-      child: CircleAvatar(\r\n-        backgroundColor: color,\r\n-      ),\r\n-    );\r\n-  }\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: Text(widget.title),\r\n-      ),\r\n-      body: Center(\r\n-        child: Column(\r\n-          mainAxisAlignment: MainAxisAlignment.center,\r\n-          children: <Widget>[\r\n-            SizedBox(\r\n-              width: 200.0,\r\n-              height: 100.0,\r\n-              child: Center(\r\n-                child: BatteryIndicator(\r\n-                  style: BatteryIndicatorStyle.values[_styleIndex],\r\n-                  colorful: _colorful,\r\n-                  showPercentNum: _showPercentNum,\r\n-                  mainColor: _color,\r\n-                  size: _size,\r\n-                  ratio: _ratio,\r\n-                  showPercentSlide: _showPercentSlide,\r\n-                ),\r\n-              ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.all(8.0),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: <Widget>[\r\n-                  const Text('color:'),\r\n-                  getColorSelector(Colors.blue),\r\n-                  getColorSelector(Colors.red),\r\n-                  getColorSelector(Colors.black),\r\n-                  getColorSelector(Colors.grey),\r\n-                  getColorSelector(Colors.yellow),\r\n-                  getColorSelector(Colors.green),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.all(8.0),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: <Widget>[\r\n-                  const Text('size:'),\r\n-                  Expanded(\r\n-                    child: Slider(\r\n-                      min: 8.0,\r\n-                      max: 48.0,\r\n-                      divisions: 300,\r\n-                      label: _size.toStringAsFixed(1),\r\n-                      value: _size,\r\n-                      onChanged: (val) {\r\n-                        setState(() {\r\n-                          _size = val;\r\n-                        });\r\n-                      },\r\n-                    ),\r\n+    return Material(\r\n+      child: CupertinoApp(\r\n+        home: CupertinoPageScaffold(\r\n+          child: Center(\r\n+            child: Column(\r\n+              mainAxisSize: MainAxisSize.min,\r\n+              children: [\r\n+                Padding(\r\n+                  padding: const EdgeInsets.only(bottom: 8.0),\r\n+                  child: BatteryIndicator(\r\n+                    //trackHeight: 30.0,\r\n+                    value: _value,\r\n+                    icon: _icon ? Icon(CupertinoIcons.question, color: Colors.black) : null,\r\n+                    iconOutline: Colors.white,\r\n+                    iconOutlineBlur: 1.0,\r\n                   ),\r\n-                  const Text('ratio:'),\r\n-                  Expanded(\r\n-                    child: Slider(\r\n-                      min: 1.0,\r\n-                      max: 4.0,\r\n-                      divisions: 30,\r\n-                      label: _ratio.toStringAsFixed(1),\r\n-                      value: _ratio,\r\n-                      onChanged: (val) {\r\n-                        setState(() {\r\n-                          _ratio = val;\r\n-                        });\r\n-                      },\r\n-                    ),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-              children: <Widget>[\r\n-                const Text('colorful:'),\r\n-                Checkbox(\r\n-                  value: _colorful,\r\n-                  onChanged: (val) {\r\n-                    setState(() {\r\n-                      _colorful = val ?? _colorful;\r\n-                    });\r\n-                  },\r\n                 ),\r\n-                const Text('percentNum:'),\r\n-                Checkbox(\r\n-                  value: _showPercentNum,\r\n-                  onChanged: (val) {\r\n-                    setState(() {\r\n-                      _showPercentNum = val ?? _showPercentNum;\r\n-                    });\r\n-                  },\r\n+                Text('${(_value * 100).ceil()}%'),\r\n+                Slider(\r\n+                  value: _value,\r\n+                  min: 0.0,\r\n+                  max: 1.0,\r\n+                  onChanged: (v) => setState(() => _value = v),\r\n                 ),\r\n-                const Text('percentSlide:'),\r\n-                Checkbox(\r\n-                  value: _showPercentSlide,\r\n-                  onChanged: (val) {\r\n-                    setState(() {\r\n-                      _showPercentSlide = val ?? _showPercentSlide;\r\n-                    });\r\n-                  },\r\n+                Row(\r\n+                  mainAxisSize: MainAxisSize.min,\r\n+                  children: [\r\n+                    Checkbox(\r\n+                      value: _icon,\r\n+                      onChanged: (v) => setState(() => _icon = v == true),\r\n+                    ),\r\n+                    Text(\"Show Icon\"),\r\n+                  ],\r\n                 ),\r\n               ],\r\n             ),\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-              children: <Widget>[\r\n-                const Text('style:'),\r\n-                DropdownButton(\r\n-                  value: _styleIndex,\r\n-                  items: _styleItems,\r\n-                  onChanged: (val) {\r\n-                    setState(() {\r\n-                      _styleIndex = val as int;\r\n-                    });\r\n-                  },\r\n-                ),\r\n-              ],\r\n-            ),\r\n-          ],\r\n+          ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n-}\n-import 'package:flutter/material.dart';\r\n-import 'package:ui_view_laboratory/components/SlideUpPanel.dart';\r\n-\r\n-void main() {\r\n-  runApp(const MyApp());\r\n-}\r\n-\r\n-class MyApp extends StatefulWidget {\r\n-  const MyApp({super.key});\r\n-\r\n-  @override\r\n-  MyAppState createState() => MyAppState();\r\n-}\r\n-\r\n-class MyAppState extends State<MyApp> {\r\n-  \r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n-      home:buildSlideUpPanel(context),\r\n-    );\r\n-  }\r\n-\r\n-  \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720101232566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,59 +1,129 @@\n-import 'package:cupertino_battery_indicator/cupertino_battery_indicator.dart';\r\n-import 'package:flutter/cupertino.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:semicircle_indicator/semicircle_indicator.dart';\r\n \r\n void main() {\r\n-  runApp(ExampleApp());\r\n+  runApp(const MyApp());\r\n }\r\n \r\n-class ExampleApp extends StatefulWidget {\r\n+class MyApp extends StatelessWidget {\r\n+  const MyApp({Key? key}) : super(key: key);\r\n+\r\n   @override\r\n-  State<ExampleApp> createState() => _ExampleAppState();\r\n+  Widget build(BuildContext context) {\r\n+    return MaterialApp(\r\n+      title: 'Flutter Demo',\r\n+      theme: ThemeData(\r\n+        primarySwatch: Colors.blue,\r\n+      ),\r\n+      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n+    );\r\n+  }\r\n }\r\n \r\n-class _ExampleAppState extends State<ExampleApp> {\r\n-  double _value = 0.5;\r\n-  bool _icon = false;\r\n+class MyHomePage extends StatelessWidget {\r\n+  const MyHomePage({Key? key, required this.title}) : super(key: key);\r\n \r\n+  final String title;\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Material(\r\n-      child: CupertinoApp(\r\n-        home: CupertinoPageScaffold(\r\n-          child: Center(\r\n-            child: Column(\r\n-              mainAxisSize: MainAxisSize.min,\r\n-              children: [\r\n-                Padding(\r\n-                  padding: const EdgeInsets.only(bottom: 8.0),\r\n-                  child: BatteryIndicator(\r\n-                    //trackHeight: 30.0,\r\n-                    value: _value,\r\n-                    icon: _icon ? Icon(CupertinoIcons.question, color: Colors.black) : null,\r\n-                    iconOutline: Colors.white,\r\n-                    iconOutlineBlur: 1.0,\r\n-                  ),\r\n+    return Scaffold(\r\n+      body: Center(\r\n+        child: SingleChildScrollView(\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            children: [\r\n+              const SizedBox(\r\n+                height: 100,\r\n+                width: double.infinity,\r\n+              ),\r\n+              const SemicircularIndicator(\r\n+                color: Colors.orange,\r\n+                bottomPadding: 0,\r\n+                child: Text(\r\n+                  '75%',\r\n+                  style: TextStyle(\r\n+                      fontSize: 32,\r\n+                      fontWeight: FontWeight.w600,\r\n+                      color: Colors.orange),\r\n                 ),\r\n-                Text('${(_value * 100).ceil()}%'),\r\n-                Slider(\r\n-                  value: _value,\r\n-                  min: 0.0,\r\n-                  max: 1.0,\r\n-                  onChanged: (v) => setState(() => _value = v),\r\n+              ),\r\n+              const SizedBox(height: 50),\r\n+              const SemicircularIndicator(\r\n+                strokeCap: StrokeCap.square,\r\n+                color: Colors.blueAccent,\r\n+                bottomPadding: 0,\r\n+                child: Text(\r\n+                  '75%',\r\n+                  style: TextStyle(\r\n+                      fontSize: 32,\r\n+                      fontWeight: FontWeight.w600,\r\n+                      color: Colors.blueAccent),\r\n                 ),\r\n-                Row(\r\n-                  mainAxisSize: MainAxisSize.min,\r\n-                  children: [\r\n-                    Checkbox(\r\n-                      value: _icon,\r\n-                      onChanged: (v) => setState(() => _icon = v == true),\r\n-                    ),\r\n-                    Text(\"Show Icon\"),\r\n-                  ],\r\n+              ),\r\n+              const SizedBox(height: 50),\r\n+              const SemicircularIndicator(\r\n+                radius: 100,\r\n+                color: Colors.yellow,\r\n+                backgroundColor: Colors.orange,\r\n+                strokeWidth: 13,\r\n+                bottomPadding: 0,\r\n+                child: Text(\r\n+                  '75%',\r\n+                  style: TextStyle(\r\n+                      fontSize: 32,\r\n+                      fontWeight: FontWeight.w600,\r\n+                      color: Colors.orange),\r\n                 ),\r\n-              ],\r\n-            ),\r\n+              ),\r\n+              const SizedBox(height: 50),\r\n+              Container(\r\n+                height: 40,\r\n+                width: double.infinity,\r\n+                color: Colors.grey,\r\n+              ),\r\n+              const SemicircularIndicator(\r\n+                radius: 100,\r\n+                color: Colors.yellow,\r\n+                backgroundColor: Colors.orange,\r\n+                strokeWidth: 13,\r\n+                bottomPadding: 0,\r\n+                child: Text(\r\n+                  '75%',\r\n+                  style: TextStyle(\r\n+                      fontSize: 32,\r\n+                      fontWeight: FontWeight.w600,\r\n+                      color: Colors.orange),\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                height: 40,\r\n+                width: double.infinity,\r\n+                color: Colors.grey,\r\n+              ),\r\n+              const SemicircularIndicator(\r\n+                radius: 100,\r\n+                color: Colors.yellow,\r\n+                backgroundColor: Colors.orange,\r\n+                strokeWidth: 13,\r\n+                bottomPadding: 0,\r\n+                contain: true,\r\n+                child: Text(\r\n+                  '75%',\r\n+                  style: TextStyle(\r\n+                      fontSize: 32,\r\n+                      fontWeight: FontWeight.w600,\r\n+                      color: Colors.orange),\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                height: 40,\r\n+                width: double.infinity,\r\n+                color: Colors.grey,\r\n+              ),\r\n+              const SizedBox(height: 400),\r\n+            ],\r\n           ),\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1720101387171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,130 +1,49 @@\n import 'package:flutter/material.dart';\r\n-import 'package:semicircle_indicator/semicircle_indicator.dart';\r\n+import 'package:percent_indicator_example/sample_circular_page.dart';\r\n+import 'package:percent_indicator_example/sample_linear_page.dart';\r\n \r\n void main() {\r\n-  runApp(const MyApp());\r\n+  runApp(MaterialApp(home: Scaffold(body: SamplePage())));\r\n }\r\n \r\n-class MyApp extends StatelessWidget {\r\n-  const MyApp({Key? key}) : super(key: key);\r\n+class SamplePage extends StatefulWidget {\r\n+  @override\r\n+  _SamplePageState createState() => _SamplePageState();\r\n+}\r\n \r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      title: 'Flutter Demo',\r\n-      theme: ThemeData(\r\n-        primarySwatch: Colors.blue,\r\n+class _SamplePageState extends State<SamplePage> {\r\n+  void _openPage(Widget page) {\r\n+    Navigator.push(\r\n+      context,\r\n+      MaterialPageRoute(\r\n+        builder: (BuildContext context) => page,\r\n       ),\r\n-      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n     );\r\n   }\r\n-}\r\n \r\n-class MyHomePage extends StatelessWidget {\r\n-  const MyHomePage({Key? key, required this.title}) : super(key: key);\r\n-\r\n-  final String title;\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      body: Center(\r\n-        child: SingleChildScrollView(\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            children: [\r\n-              const SizedBox(\r\n-                height: 100,\r\n-                width: double.infinity,\r\n-              ),\r\n-              const SemicircularIndicator(\r\n-                color: Colors.orange,\r\n-                bottomPadding: 0,\r\n-                child: Text(\r\n-                  '75%',\r\n-                  style: TextStyle(\r\n-                      fontSize: 32,\r\n-                      fontWeight: FontWeight.w600,\r\n-                      color: Colors.orange),\r\n-                ),\r\n-              ),\r\n-              const SizedBox(height: 50),\r\n-              const SemicircularIndicator(\r\n-                strokeCap: StrokeCap.square,\r\n-                color: Colors.blueAccent,\r\n-                bottomPadding: 0,\r\n-                child: Text(\r\n-                  '75%',\r\n-                  style: TextStyle(\r\n-                      fontSize: 32,\r\n-                      fontWeight: FontWeight.w600,\r\n-                      color: Colors.blueAccent),\r\n-                ),\r\n-              ),\r\n-              const SizedBox(height: 50),\r\n-              const SemicircularIndicator(\r\n-                radius: 100,\r\n-                color: Colors.yellow,\r\n-                backgroundColor: Colors.orange,\r\n-                strokeWidth: 13,\r\n-                bottomPadding: 0,\r\n-                child: Text(\r\n-                  '75%',\r\n-                  style: TextStyle(\r\n-                      fontSize: 32,\r\n-                      fontWeight: FontWeight.w600,\r\n-                      color: Colors.orange),\r\n-                ),\r\n-              ),\r\n-              const SizedBox(height: 50),\r\n-              Container(\r\n-                height: 40,\r\n-                width: double.infinity,\r\n-                color: Colors.grey,\r\n-              ),\r\n-              const SemicircularIndicator(\r\n-                radius: 100,\r\n-                color: Colors.yellow,\r\n-                backgroundColor: Colors.orange,\r\n-                strokeWidth: 13,\r\n-                bottomPadding: 0,\r\n-                child: Text(\r\n-                  '75%',\r\n-                  style: TextStyle(\r\n-                      fontSize: 32,\r\n-                      fontWeight: FontWeight.w600,\r\n-                      color: Colors.orange),\r\n-                ),\r\n-              ),\r\n-              Container(\r\n-                height: 40,\r\n-                width: double.infinity,\r\n-                color: Colors.grey,\r\n-              ),\r\n-              const SemicircularIndicator(\r\n-                radius: 100,\r\n-                color: Colors.yellow,\r\n-                backgroundColor: Colors.orange,\r\n-                strokeWidth: 13,\r\n-                bottomPadding: 0,\r\n-                contain: true,\r\n-                child: Text(\r\n-                  '75%',\r\n-                  style: TextStyle(\r\n-                      fontSize: 32,\r\n-                      fontWeight: FontWeight.w600,\r\n-                      color: Colors.orange),\r\n-                ),\r\n-              ),\r\n-              Container(\r\n-                height: 40,\r\n-                width: double.infinity,\r\n-                color: Colors.grey,\r\n-              ),\r\n-              const SizedBox(height: 400),\r\n-            ],\r\n-          ),\r\n+    return Container(\r\n+      child: Center(\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: <Widget>[\r\n+            MaterialButton(\r\n+              color: Colors.blueAccent,\r\n+              child: Text(\"Circular Library\"),\r\n+              onPressed: () => _openPage(SampleCircularPage()),\r\n+            ),\r\n+            Padding(\r\n+              padding: EdgeInsets.all(20.0),\r\n+            ),\r\n+            MaterialButton(\r\n+              color: Colors.blueAccent,\r\n+              child: Text(\"Linear Library\"),\r\n+              onPressed: () => _openPage(SampleLinearPage()),\r\n+            ),\r\n+          ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1720101449706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:percent_indicator_example/sample_circular_page.dart';\r\n import 'package:percent_indicator_example/sample_linear_page.dart';\r\n+import 'package:per';\r\n \r\n void main() {\r\n   runApp(MaterialApp(home: Scaffold(body: SamplePage())));\r\n }\r\n"
                },
                {
                    "date": 1720101459038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import 'package:flutter/material.dart';\r\n-import 'package:percent_indicator_example/sample_circular_page.dart';\r\n-import 'package:percent_indicator_example/sample_linear_page.dart';\r\n+\r\n import 'package:percent_indicator/percent_indicator.dart';\r\n \r\n void main() {\r\n   runApp(MaterialApp(home: Scaffold(body: SamplePage())));\r\n"
                },
                {
                    "date": 1720101472903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:percent_indicator_example/sample_circular_page.dart';\r\n+import 'package:percent_indicator_example/sample_linear_page.dart';\r\n+import 'package:percent_indicator/percent_indicator.dart';\r\n+\r\n+void main() {\r\n+  runApp(MaterialApp(home: Scaffold(body: SamplePage())));\r\n+}\r\n+\r\n+class SamplePage extends StatefulWidget {\r\n+  @override\r\n+  _SamplePageState createState() => _SamplePageState();\r\n+}\r\n+\r\n+class _SamplePageState extends State<SamplePage> {\r\n+  void _openPage(Widget page) {\r\n+    Navigator.push(\r\n+      context,\r\n+      MaterialPageRoute(\r\n+        builder: (BuildContext context) => page,\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Container(\r\n+      child: Center(\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: <Widget>[\r\n+            MaterialButton(\r\n+              color: Colors.blueAccent,\r\n+              child: Text(\"Circular Library\"),\r\n+              onPressed: () => _openPage(SampleCircularPage()),\r\n+            ),\r\n+            Padding(\r\n+              padding: EdgeInsets.all(20.0),\r\n+            ),\r\n+            MaterialButton(\r\n+              color: Colors.blueAccent,\r\n+              child: Text(\"Linear Library\"),\r\n+              onPressed: () => _openPage(SampleLinearPage()),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1720076332840,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:top_snackbar_flutter/custom_snack_bar.dart';\r\nimport 'package:top_snackbar_flutter/tap_bounce_container.dart';\r\nimport 'package:top_snackbar_flutter/top_snack_bar.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatefulWidget {\r\n  const MyApp({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  MyAppState createState() => MyAppState();\r\n}\r\n\r\nclass MyAppState extends State<MyApp> {\r\n  late AnimationController localAnimationController;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      theme: ThemeData(primaryColor: Colors.orangeAccent),\r\n      home: Builder(\r\n        builder: (BuildContext context) {\r\n          return Scaffold(\r\n            body: Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 16),\r\n              child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                children: [\r\n                  TapBounceContainer(\r\n                    onTap: () {\r\n                      showTopSnackBar(\r\n                        Overlay.of(context),\r\n                        const CustomSnackBar.info(\r\n                          message:\r\n                              'There is some information. You need to do something with that',\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: buildButton(context, 'Show info'),\r\n                  ),\r\n                  const SizedBox(height: 24),\r\n                  TapBounceContainer(\r\n                    onTap: () {\r\n                      showTopSnackBar(\r\n                        Overlay.of(context),\r\n                        const CustomSnackBar.success(\r\n                          message:\r\n                              'Good job, your release is successful. Have a nice day',\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: buildButton(context, 'Show success'),\r\n                  ),\r\n                  const SizedBox(height: 24),\r\n                  TapBounceContainer(\r\n                    onTap: () {\r\n                      showTopSnackBar(\r\n                        Overlay.of(context),\r\n                        const CustomSnackBar.error(\r\n                          message:\r\n                              'Something went wrong. Please check your credentials and try again',\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: buildButton(context, 'Show error'),\r\n                  ),\r\n                  const SizedBox(height: 48),\r\n                  TapBounceContainer(\r\n                    onTap: () {\r\n                      showTopSnackBar(\r\n                        Overlay.of(context),\r\n                        const CustomSnackBar.info(\r\n                          message: 'Persistent SnackBar',\r\n                        ),\r\n                        persistent: true,\r\n                        onAnimationControllerInit: (controller) {\r\n                          localAnimationController = controller;\r\n                        },\r\n                      );\r\n                    },\r\n                    child: buildButton(context, 'Show persistent SnackBar'),\r\n                  ),\r\n                  const SizedBox(height: 24),\r\n                  TapBounceContainer(\r\n                    onTap: () => localAnimationController.reverse(),\r\n                    child: buildButton(context, 'Dismiss persistent SnackBar'),\r\n                  ),\r\n                  const SizedBox(height: 24),\r\n                  TapBounceContainer(\r\n                    onTap: () {\r\n                      showTopSnackBar(\r\n                        Overlay.of(context),\r\n                        const CustomSnackBar.info(\r\n                          message: 'Try to swipe me left',\r\n                        ),\r\n                        dismissType: DismissType.onSwipe,\r\n                        dismissDirection: [DismissDirection.endToStart],\r\n                      );\r\n                    },\r\n                    child: buildButton(\r\n                      context,\r\n                      'Show swiped dismissible SnackBar',\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n          );\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  Container buildButton(BuildContext context, String text) {\r\n    return Container(\r\n      decoration: BoxDecoration(\r\n        color: Theme.of(context).primaryColor,\r\n        borderRadius: BorderRadius.circular(12),\r\n        boxShadow: [\r\n          BoxShadow(\r\n            color: Colors.grey.withOpacity(0.4),\r\n            spreadRadius: 6,\r\n            blurRadius: 10,\r\n            offset: const Offset(0, 3),\r\n          ),\r\n        ],\r\n      ),\r\n      child: Padding(\r\n        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24),\r\n        child: Center(\r\n          child: Text(\r\n            text,\r\n            style: const TextStyle(\r\n              color: Colors.white,\r\n              fontSize: 16,\r\n              fontWeight: FontWeight.w600,\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}"
        }
    ]
}