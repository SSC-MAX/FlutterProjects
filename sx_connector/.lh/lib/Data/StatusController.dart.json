{
    "sourceFile": "lib/Data/StatusController.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1719921752223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719921760909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import 'dart:async';\r\n+\r\n+import 'package:battery_info/battery_info_plugin.dart';\r\n+import 'package:battery_info/model/android_battery_info.dart';\r\n+import 'package:battery_info/model/iso_battery_info.dart';\r\n+import 'package:flutter/foundation.dart';\r\n+import 'package:geolocator/geolocator.dart';\r\n+import 'package:get/get.dart';\r\n+import 'package:sx_connector/Components/Location/LocationHelper.dart';\r\n+import 'package:sx_connector/Network/common/NetworkHelp.dart';\r\n+import 'package:sx_connector/utils/CommonUtils.dart';\r\n+import '../Network/pojo/StatusR.dart';\r\n+\r\n+class StatusController extends GetxController{\r\n+  RxInt? batteryLevel = 0.obs;\r\n+  RxString? batteryStatus = ''.obs;\r\n+  RxDouble? longitude = 1.0.obs;\r\n+  RxDouble? latitude = 1.0.obs;\r\n+  RxString? author = ''.obs;\r\n+\r\n+  @override\r\n+  void onInit() {\r\n+    super.onInit();\r\n+    // 初始化状态\r\n+    if(defaultTargetPlatform==TargetPlatform.android){\r\n+      androidInit();\r\n+      // 设置Android电池监听器\r\n+      BatteryInfoPlugin().androidBatteryInfoStream.listen((AndroidBatteryInfo? androidBatteryInfo) {\r\n+        updateAndroidBatteryData(androidBatteryInfo);\r\n+      });\r\n+    }else{\r\n+      IOSInit();\r\n+      // 设置IOS电池监听器\r\n+      // BatteryInfoPlugin().iosBatteryInfoStream.listen((IosBatteryInfo? iosBatteryInfo) {\r\n+      //   updateIOSBatteryData(iosBatteryInfo);\r\n+      // });\r\n+    }\r\n+    // 注册位置变化的监听器\r\n+    StreamSubscription<Position> positionStream = Geolocator.getPositionStream(locationSettings: const LocationSettings(distanceFilter: 100)).listen(\r\n+            (Position? position) {\r\n+          logger.i(\"检测到位置变化\\n${position == null ? '位置不可知' : 'longitude : ${position.longitude.toString()}, latitude : ${position.latitude.toString()}'}\");\r\n+          updateLocationData(position!.longitude, position.latitude, defaultTargetPlatform);\r\n+        });\r\n+  }\r\n+\r\n+  // android系统app启动时更新状态\r\n+  void androidInit() async {\r\n+    batteryLevel?.value =  (await BatteryInfoPlugin().androidBatteryInfo)!.batteryLevel!;\r\n+    batteryStatus?.value = (await BatteryInfoPlugin().androidBatteryInfo)!.chargingStatus.toString();\r\n+    Position position = await getCurrentLocation();\r\n+    longitude?.value = position.longitude;\r\n+    latitude?.value = position.latitude;\r\n+    author?.value = 'Android';\r\n+    logger.i(\"Android Status初始化完成\\n${toString()}\");\r\n+  }\r\n+\r\n+  // ios系统app启动时更新状态\r\n+  void IOSInit() async {\r\n+    // batteryLevel?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.batteryLevel!;\r\n+    // batteryStatus?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.chargingStatus.toString();\r\n+    batteryLevel?.value = 99;\r\n+    batteryStatus?.value=\"Charging\";\r\n+    author?.value = 'IOS';\r\n+    Position position = await getCurrentLocation();\r\n+    longitude?.value = position.longitude;\r\n+    latitude?.value = position.latitude;\r\n+    // longitude?.value = 117.3;\r\n+    // latitude?.value = 66.8;\r\n+    logger.i(\"IOS Status初始化完成\\n${toString()}\");\r\n+  }\r\n+\r\n+  // 更新地理位置\r\n+  void updateLocationData(double newLongitude, double newLatitude, TargetPlatform platform){\r\n+    longitude?.value = newLongitude;\r\n+    latitude?.value = newLatitude;\r\n+    try{\r\n+      // statusUpdatePost(platform, \"位置\");\r\n+      statusUpdateSocket(platform, \"位置\");\r\n+      // channel.sink.add();\r\n+    }catch(e){\r\n+      logger.e(e);\r\n+    }\r\n+  }\r\n+\r\n+  // Android更新电池信息\r\n+  updateAndroidBatteryData(AndroidBatteryInfo? batteryInfo){\r\n+    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n+    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n+    logger.d(\"Android电池修改后===>$batteryLevel,$batteryStatus\");\r\n+    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n+    statusUpdateSocket(TargetPlatform.android, \"电池\");\r\n+  }\r\n+\r\n+  // IOS更新电池信息\r\n+  updateIOSBatteryData(IosBatteryInfo? batteryInfo){\r\n+    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n+    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n+    logger.d(\"IOS电池修改后===>$batteryLevel,$batteryStatus\");\r\n+    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n+    statusUpdateSocket(TargetPlatform.iOS, \"电池\");\r\n+  }\r\n+\r\n+  // 构建StatusR以便发送网络请求\r\n+  StatusR buildStatusR(String msg){\r\n+    return StatusR(\r\n+        code: 100,\r\n+        batteryLevel: batteryLevel!.value,\r\n+        batteryStatus: batteryStatus!.value,\r\n+        longitude: longitude!.value,\r\n+        latitude: latitude!.value,\r\n+        author: author!.value,\r\n+        msg:\"$author状态已更新 : $msg\");\r\n+  }\r\n+\r\n+  @override\r\n+  String toString() {\r\n+    return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n+  }\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719921768170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import 'package:battery_info/battery_info_plugin.dart';\r\n+import 'package:battery_info/model/android_battery_info.dart';\r\n+import 'package:battery_info/model/iso_battery_info.dart';\r\n+import 'package:flutter/foundation.dart';\r\n+import 'package:geolocator/geolocator.dart';\r\n+import 'package:get/get.dart';\r\n+import 'package:sx_connector/Components/Location/LocationHelper.dart';\r\n+import 'package:sx_connector/Network/common/NetworkHelp.dart';\r\n+import 'package:sx_connector/utils/CommonUtils.dart';\r\n+import '../Network/pojo/StatusR.dart';\r\n+\r\n+class StatusController extends GetxController{\r\n+  RxInt? batteryLevel = 0.obs;\r\n+  RxString? batteryStatus = ''.obs;\r\n+  RxDouble? longitude = 1.0.obs;\r\n+  RxDouble? latitude = 1.0.obs;\r\n+  RxString? author = ''.obs;\r\n+\r\n+  @override\r\n+  void onInit() {\r\n+    super.onInit();\r\n+    // 初始化状态\r\n+    if(defaultTargetPlatform==TargetPlatform.android){\r\n+      androidInit();\r\n+      // 设置Android电池监听器\r\n+      BatteryInfoPlugin().androidBatteryInfoStream.listen((AndroidBatteryInfo? androidBatteryInfo) {\r\n+        updateAndroidBatteryData(androidBatteryInfo);\r\n+      });\r\n+    }else{\r\n+      IOSInit();\r\n+      // 设置IOS电池监听器\r\n+      // BatteryInfoPlugin().iosBatteryInfoStream.listen((IosBatteryInfo? iosBatteryInfo) {\r\n+      //   updateIOSBatteryData(iosBatteryInfo);\r\n+      // });\r\n+    }\r\n+    // 注册位置变化的监听器\r\n+    StreamSubscription<Position> positionStream = Geolocator.getPositionStream(locationSettings: const LocationSettings(distanceFilter: 100)).listen(\r\n+            (Position? position) {\r\n+          logger.i(\"检测到位置变化\\n${position == null ? '位置不可知' : 'longitude : ${position.longitude.toString()}, latitude : ${position.latitude.toString()}'}\");\r\n+          updateLocationData(position!.longitude, position.latitude, defaultTargetPlatform);\r\n+        });\r\n+  }\r\n+\r\n+  // android系统app启动时更新状态\r\n+  void androidInit() async {\r\n+    batteryLevel?.value =  (await BatteryInfoPlugin().androidBatteryInfo)!.batteryLevel!;\r\n+    batteryStatus?.value = (await BatteryInfoPlugin().androidBatteryInfo)!.chargingStatus.toString();\r\n+    Position position = await getCurrentLocation();\r\n+    longitude?.value = position.longitude;\r\n+    latitude?.value = position.latitude;\r\n+    author?.value = 'Android';\r\n+    logger.i(\"Android Status初始化完成\\n${toString()}\");\r\n+  }\r\n+\r\n+  // ios系统app启动时更新状态\r\n+  void IOSInit() async {\r\n+    // batteryLevel?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.batteryLevel!;\r\n+    // batteryStatus?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.chargingStatus.toString();\r\n+    batteryLevel?.value = 99;\r\n+    batteryStatus?.value=\"Charging\";\r\n+    author?.value = 'IOS';\r\n+    Position position = await getCurrentLocation();\r\n+    longitude?.value = position.longitude;\r\n+    latitude?.value = position.latitude;\r\n+    // longitude?.value = 117.3;\r\n+    // latitude?.value = 66.8;\r\n+    logger.i(\"IOS Status初始化完成\\n${toString()}\");\r\n+  }\r\n+\r\n+  // 更新地理位置\r\n+  void updateLocationData(double newLongitude, double newLatitude, TargetPlatform platform){\r\n+    longitude?.value = newLongitude;\r\n+    latitude?.value = newLatitude;\r\n+    try{\r\n+      // statusUpdatePost(platform, \"位置\");\r\n+      statusUpdateSocket(platform, \"位置\");\r\n+      // channel.sink.add();\r\n+    }catch(e){\r\n+      logger.e(e);\r\n+    }\r\n+  }\r\n+\r\n+  // Android更新电池信息\r\n+  updateAndroidBatteryData(AndroidBatteryInfo? batteryInfo){\r\n+    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n+    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n+    logger.d(\"Android电池修改后===>$batteryLevel,$batteryStatus\");\r\n+    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n+    statusUpdateSocket(TargetPlatform.android, \"电池\");\r\n+  }\r\n+\r\n+  // IOS更新电池信息\r\n+  updateIOSBatteryData(IosBatteryInfo? batteryInfo){\r\n+    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n+    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n+    logger.d(\"IOS电池修改后===>$batteryLevel,$batteryStatus\");\r\n+    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n+    statusUpdateSocket(TargetPlatform.iOS, \"电池\");\r\n+  }\r\n+\r\n+  // 构建StatusR以便发送网络请求\r\n+  StatusR buildStatusR(String msg){\r\n+    return StatusR(\r\n+        code: 100,\r\n+        batteryLevel: batteryLevel!.value,\r\n+        batteryStatus: batteryStatus!.value,\r\n+        longitude: longitude!.value,\r\n+        latitude: latitude!.value,\r\n+        author: author!.value,\r\n+        msg:\"$author状态已更新 : $msg\");\r\n+  }\r\n+\r\n+  @override\r\n+  String toString() {\r\n+    return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n+  }\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719987950436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,122 +1,4 @@\n-import 'package:battery_info/battery_info_plugin.dart';\r\n-import 'package:battery_info/model/android_battery_info.dart';\r\n-import 'package:battery_info/model/iso_battery_info.dart';\r\n-import 'package:flutter/foundation.dart';\r\n-import 'package:geolocator/geolocator.dart';\r\n-import 'package:get/get.dart';\r\n-import 'package:sx_connector/Components/Location/LocationHelper.dart';\r\n-import 'package:sx_connector/Network/common/NetworkHelp.dart';\r\n-import 'package:sx_connector/utils/CommonUtils.dart';\r\n-import '../Network/pojo/StatusR.dart';\r\n-\r\n-class StatusController extends GetxController{\r\n-  RxInt? batteryLevel = 0.obs;\r\n-  RxString? batteryStatus = ''.obs;\r\n-  RxDouble? longitude = 1.0.obs;\r\n-  RxDouble? latitude = 1.0.obs;\r\n-  RxString? author = ''.obs;\r\n-\r\n-  @override\r\n-  void onInit() {\r\n-    super.onInit();\r\n-    // 初始化状态\r\n-    if(defaultTargetPlatform==TargetPlatform.android){\r\n-      androidInit();\r\n-      // 设置Android电池监听器\r\n-      BatteryInfoPlugin().androidBatteryInfoStream.listen((AndroidBatteryInfo? androidBatteryInfo) {\r\n-        updateAndroidBatteryData(androidBatteryInfo);\r\n-      });\r\n-    }else{\r\n-      IOSInit();\r\n-      // 设置IOS电池监听器\r\n-      // BatteryInfoPlugin().iosBatteryInfoStream.listen((IosBatteryInfo? iosBatteryInfo) {\r\n-      //   updateIOSBatteryData(iosBatteryInfo);\r\n-      // });\r\n-    }\r\n-    // 注册位置变化的监听器\r\n-    StreamSubscription<Position> positionStream = Geolocator.getPositionStream(locationSettings: const LocationSettings(distanceFilter: 100)).listen(\r\n-            (Position? position) {\r\n-          logger.i(\"检测到位置变化\\n${position == null ? '位置不可知' : 'longitude : ${position.longitude.toString()}, latitude : ${position.latitude.toString()}'}\");\r\n-          updateLocationData(position!.longitude, position.latitude, defaultTargetPlatform);\r\n-        });\r\n-  }\r\n-\r\n-  // android系统app启动时更新状态\r\n-  void androidInit() async {\r\n-    batteryLevel?.value =  (await BatteryInfoPlugin().androidBatteryInfo)!.batteryLevel!;\r\n-    batteryStatus?.value = (await BatteryInfoPlugin().androidBatteryInfo)!.chargingStatus.toString();\r\n-    Position position = await getCurrentLocation();\r\n-    longitude?.value = position.longitude;\r\n-    latitude?.value = position.latitude;\r\n-    author?.value = 'Android';\r\n-    logger.i(\"Android Status初始化完成\\n${toString()}\");\r\n-  }\r\n-\r\n-  // ios系统app启动时更新状态\r\n-  void IOSInit() async {\r\n-    // batteryLevel?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.batteryLevel!;\r\n-    // batteryStatus?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.chargingStatus.toString();\r\n-    batteryLevel?.value = 99;\r\n-    batteryStatus?.value=\"Charging\";\r\n-    author?.value = 'IOS';\r\n-    Position position = await getCurrentLocation();\r\n-    longitude?.value = position.longitude;\r\n-    latitude?.value = position.latitude;\r\n-    // longitude?.value = 117.3;\r\n-    // latitude?.value = 66.8;\r\n-    logger.i(\"IOS Status初始化完成\\n${toString()}\");\r\n-  }\r\n-\r\n-  // 更新地理位置\r\n-  void updateLocationData(double newLongitude, double newLatitude, TargetPlatform platform){\r\n-    longitude?.value = newLongitude;\r\n-    latitude?.value = newLatitude;\r\n-    try{\r\n-      // statusUpdatePost(platform, \"位置\");\r\n-      statusUpdateSocket(platform, \"位置\");\r\n-      // channel.sink.add();\r\n-    }catch(e){\r\n-      logger.e(e);\r\n-    }\r\n-  }\r\n-\r\n-  // Android更新电池信息\r\n-  updateAndroidBatteryData(AndroidBatteryInfo? batteryInfo){\r\n-    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n-    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n-    logger.d(\"Android电池修改后===>$batteryLevel,$batteryStatus\");\r\n-    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n-    statusUpdateSocket(TargetPlatform.android, \"电池\");\r\n-  }\r\n-\r\n-  // IOS更新电池信息\r\n-  updateIOSBatteryData(IosBatteryInfo? batteryInfo){\r\n-    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n-    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n-    logger.d(\"IOS电池修改后===>$batteryLevel,$batteryStatus\");\r\n-    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n-    statusUpdateSocket(TargetPlatform.iOS, \"电池\");\r\n-  }\r\n-\r\n-  // 构建StatusR以便发送网络请求\r\n-  StatusR buildStatusR(String msg){\r\n-    return StatusR(\r\n-        code: 100,\r\n-        batteryLevel: batteryLevel!.value,\r\n-        batteryStatus: batteryStatus!.value,\r\n-        longitude: longitude!.value,\r\n-        latitude: latitude!.value,\r\n-        author: author!.value,\r\n-        msg:\"$author状态已更新 : $msg\");\r\n-  }\r\n-\r\n-  @override\r\n-  String toString() {\r\n-    return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n-  }\r\n-\r\n-}\n import 'dart:async';\r\n \r\n import 'package:battery_info/battery_info_plugin.dart';\r\n import 'package:battery_info/model/android_battery_info.dart';\r\n@@ -229,131 +111,11 @@\n         author: author!.value,\r\n         msg:\"$author状态已更新 : $msg\");\r\n   }\r\n \r\n-  @override\r\n-  String toString() {\r\n-    return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n-  }\r\n+  \r\n \r\n-}\n-import 'dart:async';\r\n-\r\n-import 'package:battery_info/battery_info_plugin.dart';\r\n-import 'package:battery_info/model/android_battery_info.dart';\r\n-import 'package:battery_info/model/iso_battery_info.dart';\r\n-import 'package:flutter/cupertino.dart';\r\n-import 'package:flutter/foundation.dart';\r\n-import 'package:geolocator/geolocator.dart';\r\n-import 'package:get/get.dart';\r\n-import 'package:sx_connector/Components/Location/LocationHelper.dart';\r\n-import 'package:sx_connector/Network/common/NetworkHelp.dart';\r\n-import 'package:sx_connector/main.dart';\r\n-import 'package:sx_connector/utils/CommonUtils.dart';\r\n-import '../Network/pojo/StatusR.dart';\r\n-\r\n-class StatusController extends GetxController{\r\n-  RxInt? batteryLevel = 0.obs;\r\n-  RxString? batteryStatus = ''.obs;\r\n-  RxDouble? longitude = 1.0.obs;\r\n-  RxDouble? latitude = 1.0.obs;\r\n-  RxString? author = ''.obs;\r\n-\r\n   @override\r\n-  void onInit() {\r\n-    super.onInit();\r\n-    // 初始化状态\r\n-    if(defaultTargetPlatform==TargetPlatform.android){\r\n-      androidInit();\r\n-      // 设置Android电池监听器\r\n-      BatteryInfoPlugin().androidBatteryInfoStream.listen((AndroidBatteryInfo? androidBatteryInfo) {\r\n-        updateAndroidBatteryData(androidBatteryInfo);\r\n-      });\r\n-    }else{\r\n-      IOSInit();\r\n-      // 设置IOS电池监听器\r\n-      // BatteryInfoPlugin().iosBatteryInfoStream.listen((IosBatteryInfo? iosBatteryInfo) {\r\n-      //   updateIOSBatteryData(iosBatteryInfo);\r\n-      // });\r\n-    }\r\n-    // 注册位置变化的监听器\r\n-    StreamSubscription<Position> positionStream = Geolocator.getPositionStream(locationSettings: const LocationSettings(distanceFilter: 100)).listen(\r\n-            (Position? position) {\r\n-          logger.i(\"检测到位置变化\\n${position == null ? '位置不可知' : 'longitude : ${position.longitude.toString()}, latitude : ${position.latitude.toString()}'}\");\r\n-          updateLocationData(position!.longitude, position.latitude, defaultTargetPlatform);\r\n-        });\r\n-  }\r\n-\r\n-  // android系统app启动时更新状态\r\n-  void androidInit() async {\r\n-    batteryLevel?.value =  (await BatteryInfoPlugin().androidBatteryInfo)!.batteryLevel!;\r\n-    batteryStatus?.value = (await BatteryInfoPlugin().androidBatteryInfo)!.chargingStatus.toString();\r\n-    Position position = await getCurrentLocation();\r\n-    longitude?.value = position.longitude;\r\n-    latitude?.value = position.latitude;\r\n-    author?.value = 'Android';\r\n-    logger.i(\"Android Status初始化完成\\n${toString()}\");\r\n-  }\r\n-\r\n-  // ios系统app启动时更新状态\r\n-  void IOSInit() async {\r\n-    // batteryLevel?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.batteryLevel!;\r\n-    // batteryStatus?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.chargingStatus.toString();\r\n-    batteryLevel?.value = 99;\r\n-    batteryStatus?.value=\"Charging\";\r\n-    author?.value = 'IOS';\r\n-    Position position = await getCurrentLocation();\r\n-    longitude?.value = position.longitude;\r\n-    latitude?.value = position.latitude;\r\n-    // longitude?.value = 117.3;\r\n-    // latitude?.value = 66.8;\r\n-    logger.i(\"IOS Status初始化完成\\n${toString()}\");\r\n-  }\r\n-\r\n-  // 更新地理位置\r\n-  void updateLocationData(double newLongitude, double newLatitude, TargetPlatform platform){\r\n-    longitude?.value = newLongitude;\r\n-    latitude?.value = newLatitude;\r\n-    try{\r\n-      // statusUpdatePost(platform, \"位置\");\r\n-      statusUpdateSocket(platform, \"位置\");\r\n-      // channel.sink.add();\r\n-    }catch(e){\r\n-      logger.e(e);\r\n-    }\r\n-  }\r\n-\r\n-  // Android更新电池信息\r\n-  updateAndroidBatteryData(AndroidBatteryInfo? batteryInfo){\r\n-    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n-    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n-    logger.d(\"Android电池修改后===>$batteryLevel,$batteryStatus\");\r\n-    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n-    statusUpdateSocket(TargetPlatform.android, \"电池\");\r\n-  }\r\n-\r\n-  // IOS更新电池信息\r\n-  updateIOSBatteryData(IosBatteryInfo? batteryInfo){\r\n-    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n-    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n-    logger.d(\"IOS电池修改后===>$batteryLevel,$batteryStatus\");\r\n-    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n-    statusUpdateSocket(TargetPlatform.iOS, \"电池\");\r\n-  }\r\n-\r\n-  // 构建StatusR以便发送网络请求\r\n-  StatusR buildStatusR(String msg){\r\n-    return StatusR(\r\n-        code: 100,\r\n-        batteryLevel: batteryLevel!.value,\r\n-        batteryStatus: batteryStatus!.value,\r\n-        longitude: longitude!.value,\r\n-        latitude: latitude!.value,\r\n-        author: author!.value,\r\n-        msg:\"$author状态已更新 : $msg\");\r\n-  }\r\n-\r\n-  @override\r\n   String toString() {\r\n     return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n   }\r\n \r\n"
                },
                {
                    "date": 1719987955915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n         author: author!.value,\r\n         msg:\"$author状态已更新 : $msg\");\r\n   }\r\n \r\n-  \r\n+  void\r\n \r\n   @override\r\n   String toString() {\r\n     return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n"
                },
                {
                    "date": 1719987966680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n         author: author!.value,\r\n         msg:\"$author状态已更新 : $msg\");\r\n   }\r\n \r\n-  void\r\n+  void updateUI\r\n \r\n   @override\r\n   String toString() {\r\n     return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n"
                },
                {
                    "date": 1719987971765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n         author: author!.value,\r\n         msg:\"$author状态已更新 : $msg\");\r\n   }\r\n \r\n-  void updateUITest\r\n+  void updateUITest(ActivityMissingException)\r\n \r\n   @override\r\n   String toString() {\r\n     return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n"
                },
                {
                    "date": 1719987978701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n         author: author!.value,\r\n         msg:\"$author状态已更新 : $msg\");\r\n   }\r\n \r\n-  void updateUITest\r\n+  void updateUITest()\r\n \r\n   @override\r\n   String toString() {\r\n     return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n"
                }
            ],
            "date": 1719921752222,
            "name": "Commit-0",
            "content": "import 'dart:async';\r\n\r\nimport 'package:battery_info/battery_info_plugin.dart';\r\nimport 'package:battery_info/model/android_battery_info.dart';\r\nimport 'package:battery_info/model/iso_battery_info.dart';\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/foundation.dart';\r\nimport 'package:geolocator/geolocator.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:sx_connector/Components/Location/LocationHelper.dart';\r\nimport 'package:sx_connector/Network/common/NetworkHelp.dart';\r\nimport 'package:sx_connector/main.dart';\r\nimport 'package:sx_connector/utils/CommonUtils.dart';\r\nimport '../Network/pojo/StatusR.dart';\r\n\r\nclass StatusController extends GetxController{\r\n  RxInt? batteryLevel = 0.obs;\r\n  RxString? batteryStatus = ''.obs;\r\n  RxDouble? longitude = 1.0.obs;\r\n  RxDouble? latitude = 1.0.obs;\r\n  RxString? author = ''.obs;\r\n\r\n  @override\r\n  void onInit() {\r\n    super.onInit();\r\n    // 初始化状态\r\n    if(defaultTargetPlatform==TargetPlatform.android){\r\n      androidInit();\r\n      // 设置Android电池监听器\r\n      BatteryInfoPlugin().androidBatteryInfoStream.listen((AndroidBatteryInfo? androidBatteryInfo) {\r\n        updateAndroidBatteryData(androidBatteryInfo);\r\n      });\r\n    }else{\r\n      IOSInit();\r\n      // 设置IOS电池监听器\r\n      // BatteryInfoPlugin().iosBatteryInfoStream.listen((IosBatteryInfo? iosBatteryInfo) {\r\n      //   updateIOSBatteryData(iosBatteryInfo);\r\n      // });\r\n    }\r\n    // 注册位置变化的监听器\r\n    StreamSubscription<Position> positionStream = Geolocator.getPositionStream(locationSettings: const LocationSettings(distanceFilter: 100)).listen(\r\n            (Position? position) {\r\n          logger.i(\"检测到位置变化\\n${position == null ? '位置不可知' : 'longitude : ${position.longitude.toString()}, latitude : ${position.latitude.toString()}'}\");\r\n          updateLocationData(position!.longitude, position.latitude, defaultTargetPlatform);\r\n        });\r\n  }\r\n\r\n  // android系统app启动时更新状态\r\n  void androidInit() async {\r\n    batteryLevel?.value =  (await BatteryInfoPlugin().androidBatteryInfo)!.batteryLevel!;\r\n    batteryStatus?.value = (await BatteryInfoPlugin().androidBatteryInfo)!.chargingStatus.toString();\r\n    Position position = await getCurrentLocation();\r\n    longitude?.value = position.longitude;\r\n    latitude?.value = position.latitude;\r\n    author?.value = 'Android';\r\n    logger.i(\"Android Status初始化完成\\n${toString()}\");\r\n  }\r\n\r\n  // ios系统app启动时更新状态\r\n  void IOSInit() async {\r\n    // batteryLevel?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.batteryLevel!;\r\n    // batteryStatus?.value = (await BatteryInfoPlugin().iosBatteryInfo)!.chargingStatus.toString();\r\n    batteryLevel?.value = 99;\r\n    batteryStatus?.value=\"Charging\";\r\n    author?.value = 'IOS';\r\n    Position position = await getCurrentLocation();\r\n    longitude?.value = position.longitude;\r\n    latitude?.value = position.latitude;\r\n    // longitude?.value = 117.3;\r\n    // latitude?.value = 66.8;\r\n    logger.i(\"IOS Status初始化完成\\n${toString()}\");\r\n  }\r\n\r\n  // 更新地理位置\r\n  void updateLocationData(double newLongitude, double newLatitude, TargetPlatform platform){\r\n    longitude?.value = newLongitude;\r\n    latitude?.value = newLatitude;\r\n    try{\r\n      // statusUpdatePost(platform, \"位置\");\r\n      statusUpdateSocket(platform, \"位置\");\r\n      // channel.sink.add();\r\n    }catch(e){\r\n      logger.e(e);\r\n    }\r\n  }\r\n\r\n  // Android更新电池信息\r\n  updateAndroidBatteryData(AndroidBatteryInfo? batteryInfo){\r\n    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n    logger.d(\"Android电池修改后===>$batteryLevel,$batteryStatus\");\r\n    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n    statusUpdateSocket(TargetPlatform.android, \"电池\");\r\n  }\r\n\r\n  // IOS更新电池信息\r\n  updateIOSBatteryData(IosBatteryInfo? batteryInfo){\r\n    batteryLevel?.value = batteryInfo!.batteryLevel!;\r\n    batteryStatus?.value = batteryInfo!.chargingStatus.toString();\r\n    logger.d(\"IOS电池修改后===>$batteryLevel,$batteryStatus\");\r\n    // statusUpdatePost(TargetPlatform.android, \"电池\");\r\n    statusUpdateSocket(TargetPlatform.iOS, \"电池\");\r\n  }\r\n\r\n  // 构建StatusR以便发送网络请求\r\n  StatusR buildStatusR(String msg){\r\n    return StatusR(\r\n        code: 100,\r\n        batteryLevel: batteryLevel!.value,\r\n        batteryStatus: batteryStatus!.value,\r\n        longitude: longitude!.value,\r\n        latitude: latitude!.value,\r\n        author: author!.value,\r\n        msg:\"$author状态已更新 : $msg\");\r\n  }\r\n\r\n  @override\r\n  String toString() {\r\n    return 'batteryLevel : ${batteryLevel?.value}\\nbatteryStatus : ${batteryStatus?.value}\\nlongitude : ${longitude?.value}\\nlatitude : ${latitude?.value}\\nauthor : ${author?.value}';\r\n  }\r\n\r\n}"
        }
    ]
}